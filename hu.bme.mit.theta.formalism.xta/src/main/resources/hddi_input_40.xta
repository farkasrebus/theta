// ------------------------------------------------------------ 
// Token Ring HDDI 40
// 
// automatically generated by script generate.awk 
// M. Oliver Moeller <omoeller@brics.dk> 
// Wed Sep 19 11:44:16 2001 
// ------------------------------------------------------------ 
chan tt1,tt2,tt3,tt4,tt5,tt6,tt7,tt8,tt9,tt10,tt11,tt12,tt13,tt14,tt15,tt16,tt17,tt18,tt19,tt20,tt21,tt22,tt23,tt24,tt25,tt26,tt27,tt28,tt29,tt30,tt31,tt32,tt33,tt34,tt35,tt36,tt37,tt38,tt39,tt40,
     rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40;

const int SA = 1; 
const int td = 0; 
const int TRTT = 41;

process RING() {
clock x;
state
    ring_to_1 {x <= td},
    ring_1,
    ring_to_2 {x <= td},
    ring_2,
    ring_to_3 {x <= td},
    ring_3,
    ring_to_4 {x <= td},
    ring_4,
    ring_to_5 {x <= td},
    ring_5,
    ring_to_6 {x <= td},
    ring_6,
    ring_to_7 {x <= td},
    ring_7,
    ring_to_8 {x <= td},
    ring_8,
    ring_to_9 {x <= td},
    ring_9,
    ring_to_10 {x <= td},
    ring_10,
    ring_to_11 {x <= td},
    ring_11,
    ring_to_12 {x <= td},
    ring_12,
    ring_to_13 {x <= td},
    ring_13,
    ring_to_14 {x <= td},
    ring_14,
    ring_to_15 {x <= td},
    ring_15,
    ring_to_16 {x <= td},
    ring_16,
    ring_to_17 {x <= td},
    ring_17,
    ring_to_18 {x <= td},
    ring_18,
    ring_to_19 {x <= td},
    ring_19,
    ring_to_20 {x <= td},
    ring_20,
    ring_to_21 {x <= td},
    ring_21,
    ring_to_22 {x <= td},
    ring_22,
    ring_to_23 {x <= td},
    ring_23,
    ring_to_24 {x <= td},
    ring_24,
    ring_to_25 {x <= td},
    ring_25,
    ring_to_26 {x <= td},
    ring_26,
    ring_to_27 {x <= td},
    ring_27,
    ring_to_28 {x <= td},
    ring_28,
    ring_to_29 {x <= td},
    ring_29,
    ring_to_30 {x <= td},
    ring_30,
    ring_to_31 {x <= td},
    ring_31,
    ring_to_32 {x <= td},
    ring_32,
    ring_to_33 {x <= td},
    ring_33,
    ring_to_34 {x <= td},
    ring_34,
    ring_to_35 {x <= td},
    ring_35,
    ring_to_36 {x <= td},
    ring_36,
    ring_to_37 {x <= td},
    ring_37,
    ring_to_38 {x <= td},
    ring_38,
    ring_to_39 {x <= td},
    ring_39,
    ring_to_40 {x <= td},
    ring_40;
init ring_to_1;
trans
    ring_to_1 -> ring_1 { guard x <= td; sync tt1!;  },
    ring_1 -> ring_to_2 { sync rt1?; assign x:= 0;  },
    ring_to_2 -> ring_2 { guard x <= td; sync tt2!;  },
    ring_2 -> ring_to_3 { sync rt2?; assign x:= 0;  },
    ring_to_3 -> ring_3 { guard x <= td; sync tt3!;  },
    ring_3 -> ring_to_4 { sync rt3?; assign x:= 0;  },
    ring_to_4 -> ring_4 { guard x <= td; sync tt4!;  },
    ring_4 -> ring_to_5 { sync rt4?; assign x:= 0;  },
    ring_to_5 -> ring_5 { guard x <= td; sync tt5!;  },
    ring_5 -> ring_to_6 { sync rt5?; assign x:= 0;  },
    ring_to_6 -> ring_6 { guard x <= td; sync tt6!;  },
    ring_6 -> ring_to_7 { sync rt6?; assign x:= 0;  },
    ring_to_7 -> ring_7 { guard x <= td; sync tt7!;  },
    ring_7 -> ring_to_8 { sync rt7?; assign x:= 0;  },
    ring_to_8 -> ring_8 { guard x <= td; sync tt8!;  },
    ring_8 -> ring_to_9 { sync rt8?; assign x:= 0;  },
    ring_to_9 -> ring_9 { guard x <= td; sync tt9!;  },
    ring_9 -> ring_to_10 { sync rt9?; assign x:= 0;  },
    ring_to_10 -> ring_10 { guard x <= td; sync tt10!;  },
    ring_10 -> ring_to_11 { sync rt10?; assign x:= 0;  },
    ring_to_11 -> ring_11 { guard x <= td; sync tt11!;  },
    ring_11 -> ring_to_12 { sync rt11?; assign x:= 0;  },
    ring_to_12 -> ring_12 { guard x <= td; sync tt12!;  },
    ring_12 -> ring_to_13 { sync rt12?; assign x:= 0;  },
    ring_to_13 -> ring_13 { guard x <= td; sync tt13!;  },
    ring_13 -> ring_to_14 { sync rt13?; assign x:= 0;  },
    ring_to_14 -> ring_14 { guard x <= td; sync tt14!;  },
    ring_14 -> ring_to_15 { sync rt14?; assign x:= 0;  },
    ring_to_15 -> ring_15 { guard x <= td; sync tt15!;  },
    ring_15 -> ring_to_16 { sync rt15?; assign x:= 0;  },
    ring_to_16 -> ring_16 { guard x <= td; sync tt16!;  },
    ring_16 -> ring_to_17 { sync rt16?; assign x:= 0;  },
    ring_to_17 -> ring_17 { guard x <= td; sync tt17!;  },
    ring_17 -> ring_to_18 { sync rt17?; assign x:= 0;  },
    ring_to_18 -> ring_18 { guard x <= td; sync tt18!;  },
    ring_18 -> ring_to_19 { sync rt18?; assign x:= 0;  },
    ring_to_19 -> ring_19 { guard x <= td; sync tt19!;  },
    ring_19 -> ring_to_20 { sync rt19?; assign x:= 0;  },
    ring_to_20 -> ring_20 { guard x <= td; sync tt20!;  },
    ring_20 -> ring_to_21 { sync rt20?; assign x:= 0;  },
    ring_to_21 -> ring_21 { guard x <= td; sync tt21!;  },
    ring_21 -> ring_to_22 { sync rt21?; assign x:= 0;  },
    ring_to_22 -> ring_22 { guard x <= td; sync tt22!;  },
    ring_22 -> ring_to_23 { sync rt22?; assign x:= 0;  },
    ring_to_23 -> ring_23 { guard x <= td; sync tt23!;  },
    ring_23 -> ring_to_24 { sync rt23?; assign x:= 0;  },
    ring_to_24 -> ring_24 { guard x <= td; sync tt24!;  },
    ring_24 -> ring_to_25 { sync rt24?; assign x:= 0;  },
    ring_to_25 -> ring_25 { guard x <= td; sync tt25!;  },
    ring_25 -> ring_to_26 { sync rt25?; assign x:= 0;  },
    ring_to_26 -> ring_26 { guard x <= td; sync tt26!;  },
    ring_26 -> ring_to_27 { sync rt26?; assign x:= 0;  },
    ring_to_27 -> ring_27 { guard x <= td; sync tt27!;  },
    ring_27 -> ring_to_28 { sync rt27?; assign x:= 0;  },
    ring_to_28 -> ring_28 { guard x <= td; sync tt28!;  },
    ring_28 -> ring_to_29 { sync rt28?; assign x:= 0;  },
    ring_to_29 -> ring_29 { guard x <= td; sync tt29!;  },
    ring_29 -> ring_to_30 { sync rt29?; assign x:= 0;  },
    ring_to_30 -> ring_30 { guard x <= td; sync tt30!;  },
    ring_30 -> ring_to_31 { sync rt30?; assign x:= 0;  },
    ring_to_31 -> ring_31 { guard x <= td; sync tt31!;  },
    ring_31 -> ring_to_32 { sync rt31?; assign x:= 0;  },
    ring_to_32 -> ring_32 { guard x <= td; sync tt32!;  },
    ring_32 -> ring_to_33 { sync rt32?; assign x:= 0;  },
    ring_to_33 -> ring_33 { guard x <= td; sync tt33!;  },
    ring_33 -> ring_to_34 { sync rt33?; assign x:= 0;  },
    ring_to_34 -> ring_34 { guard x <= td; sync tt34!;  },
    ring_34 -> ring_to_35 { sync rt34?; assign x:= 0;  },
    ring_to_35 -> ring_35 { guard x <= td; sync tt35!;  },
    ring_35 -> ring_to_36 { sync rt35?; assign x:= 0;  },
    ring_to_36 -> ring_36 { guard x <= td; sync tt36!;  },
    ring_36 -> ring_to_37 { sync rt36?; assign x:= 0;  },
    ring_to_37 -> ring_37 { guard x <= td; sync tt37!;  },
    ring_37 -> ring_to_38 { sync rt37?; assign x:= 0;  },
    ring_to_38 -> ring_38 { guard x <= td; sync tt38!;  },
    ring_38 -> ring_to_39 { sync rt38?; assign x:= 0;  },
    ring_to_39 -> ring_39 { guard x <= td; sync tt39!;  },
    ring_39 -> ring_to_40 { sync rt39?; assign x:= 0;  },
    ring_to_40 -> ring_40 { guard x <= td; sync tt40!;  },
    ring_40 -> ring_to_1 { sync rt40?; assign x:= 0;  };
}

process ST1() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt1 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt1 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt1 !;  },
    station_y_idle -> station_y_sync { sync tt1 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt1 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt1 !;  };
}

process ST2() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt2 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt2 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt2 !;  },
    station_y_idle -> station_y_sync { sync tt2 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt2 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt2 !;  };
}

process ST3() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt3 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt3 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt3 !;  },
    station_y_idle -> station_y_sync { sync tt3 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt3 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt3 !;  };
}

process ST4() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt4 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt4 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt4 !;  },
    station_y_idle -> station_y_sync { sync tt4 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt4 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt4 !;  };
}

process ST5() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt5 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt5 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt5 !;  },
    station_y_idle -> station_y_sync { sync tt5 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt5 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt5 !;  };
}

process ST6() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt6 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt6 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt6 !;  },
    station_y_idle -> station_y_sync { sync tt6 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt6 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt6 !;  };
}

process ST7() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt7 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt7 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt7 !;  },
    station_y_idle -> station_y_sync { sync tt7 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt7 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt7 !;  };
}

process ST8() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt8 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt8 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt8 !;  },
    station_y_idle -> station_y_sync { sync tt8 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt8 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt8 !;  };
}

process ST9() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt9 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt9 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt9 !;  },
    station_y_idle -> station_y_sync { sync tt9 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt9 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt9 !;  };
}

process ST10() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt10 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt10 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt10 !;  },
    station_y_idle -> station_y_sync { sync tt10 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt10 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt10 !;  };
}

process ST11() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt11 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt11 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt11 !;  },
    station_y_idle -> station_y_sync { sync tt11 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt11 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt11 !;  };
}

process ST12() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt12 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt12 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt12 !;  },
    station_y_idle -> station_y_sync { sync tt12 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt12 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt12 !;  };
}

process ST13() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt13 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt13 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt13 !;  },
    station_y_idle -> station_y_sync { sync tt13 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt13 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt13 !;  };
}

process ST14() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt14 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt14 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt14 !;  },
    station_y_idle -> station_y_sync { sync tt14 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt14 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt14 !;  };
}

process ST15() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt15 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt15 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt15 !;  },
    station_y_idle -> station_y_sync { sync tt15 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt15 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt15 !;  };
}

process ST16() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt16 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt16 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt16 !;  },
    station_y_idle -> station_y_sync { sync tt16 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt16 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt16 !;  };
}

process ST17() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt17 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt17 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt17 !;  },
    station_y_idle -> station_y_sync { sync tt17 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt17 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt17 !;  };
}

process ST18() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt18 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt18 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt18 !;  },
    station_y_idle -> station_y_sync { sync tt18 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt18 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt18 !;  };
}

process ST19() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt19 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt19 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt19 !;  },
    station_y_idle -> station_y_sync { sync tt19 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt19 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt19 !;  };
}

process ST20() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt20 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt20 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt20 !;  },
    station_y_idle -> station_y_sync { sync tt20 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt20 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt20 !;  };
}

process ST21() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt21 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt21 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt21 !;  },
    station_y_idle -> station_y_sync { sync tt21 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt21 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt21 !;  };
}

process ST22() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt22 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt22 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt22 !;  },
    station_y_idle -> station_y_sync { sync tt22 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt22 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt22 !;  };
}

process ST23() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt23 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt23 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt23 !;  },
    station_y_idle -> station_y_sync { sync tt23 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt23 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt23 !;  };
}

process ST24() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt24 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt24 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt24 !;  },
    station_y_idle -> station_y_sync { sync tt24 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt24 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt24 !;  };
}

process ST25() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt25 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt25 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt25 !;  },
    station_y_idle -> station_y_sync { sync tt25 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt25 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt25 !;  };
}

process ST26() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt26 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt26 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt26 !;  },
    station_y_idle -> station_y_sync { sync tt26 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt26 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt26 !;  };
}

process ST27() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt27 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt27 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt27 !;  },
    station_y_idle -> station_y_sync { sync tt27 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt27 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt27 !;  };
}

process ST28() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt28 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt28 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt28 !;  },
    station_y_idle -> station_y_sync { sync tt28 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt28 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt28 !;  };
}

process ST29() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt29 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt29 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt29 !;  },
    station_y_idle -> station_y_sync { sync tt29 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt29 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt29 !;  };
}

process ST30() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt30 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt30 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt30 !;  },
    station_y_idle -> station_y_sync { sync tt30 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt30 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt30 !;  };
}

process ST31() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt31 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt31 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt31 !;  },
    station_y_idle -> station_y_sync { sync tt31 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt31 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt31 !;  };
}

process ST32() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt32 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt32 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt32 !;  },
    station_y_idle -> station_y_sync { sync tt32 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt32 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt32 !;  };
}

process ST33() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt33 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt33 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt33 !;  },
    station_y_idle -> station_y_sync { sync tt33 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt33 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt33 !;  };
}

process ST34() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt34 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt34 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt34 !;  },
    station_y_idle -> station_y_sync { sync tt34 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt34 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt34 !;  };
}

process ST35() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt35 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt35 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt35 !;  },
    station_y_idle -> station_y_sync { sync tt35 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt35 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt35 !;  };
}

process ST36() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt36 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt36 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt36 !;  },
    station_y_idle -> station_y_sync { sync tt36 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt36 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt36 !;  };
}

process ST37() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt37 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt37 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt37 !;  },
    station_y_idle -> station_y_sync { sync tt37 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt37 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt37 !;  };
}

process ST38() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt38 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt38 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt38 !;  },
    station_y_idle -> station_y_sync { sync tt38 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt38 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt38 !;  };
}

process ST39() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt39 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt39 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt39 !;  },
    station_y_idle -> station_y_sync { sync tt39 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt39 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt39 !;  };
}

process ST40() {
clock x, y, z;
state
    station_z_idle,
    station_z_sync {x<=SA},
    station_z_async {z<=TRTT},
    station_y_idle,
    station_y_sync {x<=SA},
    station_y_async {y<=TRTT};
init station_z_idle;
trans
    station_z_idle -> station_z_sync { sync tt40 ?; assign y := 0, x:= 0;  },
    station_z_sync -> station_y_idle { guard x >= SA && z >= TRTT; sync rt40 !;  },
    station_z_sync -> station_z_async { guard x >= SA && z < TRTT;  },
    station_z_async -> station_y_idle { sync rt40 !;  },
    station_y_idle -> station_y_sync { sync tt40 ?; assign z := 0, x:= 0;  },
    station_y_sync -> station_z_idle { guard x >= SA && y >= TRTT; sync rt40 !;  },
    station_y_sync -> station_y_async { guard x >= SA && y < TRTT;  },
    station_y_async -> station_z_idle { sync rt40 !;  };
}
system RING, ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8, ST9, ST10, ST11, ST12, ST13, ST14, ST15, ST16, ST17, ST18, ST19, ST20, ST21, ST22, ST23, ST24, ST25, ST26, ST27, ST28, ST29, ST30, ST31, ST32, ST33, ST34, ST35, ST36, ST37, ST38, ST39, ST40;